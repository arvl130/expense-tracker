// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String         @id @default(cuid())
  name          String?
  email         String?        @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  transaction   Transaction[]
  userSettings  UserSettings[]
}

model UserSettings {
  userId        String @id
  expectedTotal String
  user          User?  @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

enum Operation {
  ADD
  SUB
}

model Transaction {
  id               String             @id @default(uuid())
  description      String
  operation        Operation
  amount           Int
  accomplishedAt   String
  userId           String
  user             User?              @relation(fields: [userId], references: [id], onDelete: Cascade)
  transactionImage TransactionImage[]
}

model TransactionImage {
  id            String       @id @default(uuid())
  path          String
  title         String
  transactionId String
  transaction   Transaction? @relation(fields: [transactionId], references: [id], onDelete: Cascade)
}
